{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"Employeeloading\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\" Loading... Please refresh once the ASP.NET backend has started. See \");\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"https://aka.ms/jspsintegrationvue\"\n}, \"https://aka.ms/jspsintegrationvue\", -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\" for more details. \");\n\nconst _hoisted_7 = [_hoisted_4, _hoisted_5, _hoisted_6];\nconst _hoisted_8 = {\n  key: 1,\n  class: \"col\",\n  id: \"employeesGet\"\n};\n\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Id\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Number of times\")])], -1\n/* HOISTED */\n);\n\nconst _hoisted_10 = {\n  key: 2,\n  class: \"col\",\n  id: \"employeesPost\"\n};\n\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Id\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Number of times\")])], -1\n/* HOISTED */\n);\n\nconst _hoisted_12 = {\n  key: 0\n};\nconst _hoisted_13 = {\n  class: \"row\"\n};\nconst _hoisted_14 = {\n  id: \"employeeRoll\",\n  class: \"col\"\n};\n\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-outline-info\"\n}, \"Who gets to be the \\\"lucky\\\" one?\", -1\n/* HOISTED */\n);\n\nconst _hoisted_16 = [_hoisted_15];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_ctx.Employeeloading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _hoisted_7)) : _createCommentVNode(\"v-if\", true), _ctx.EmployeeGet ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"table\", null, [_hoisted_9, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.EmployeeGet, emp => {\n    return _openBlock(), _createElementBlock(\"tr\", null, [_createElementVNode(\"td\", null, _toDisplayString(emp.id), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, _toDisplayString(emp.name), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, _toDisplayString(emp.numOfTimes), 1\n    /* TEXT */\n    )]);\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  ))])])])) : _createCommentVNode(\"v-if\", true), _ctx.EmployeeRoll ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"table\", null, [_hoisted_11, _createElementVNode(\"tbody\", null, [_ctx.EmployeeRoll ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_12, [_createElementVNode(\"td\", null, _toDisplayString(_ctx.EmployeeRoll.id), 1\n  /* TEXT */\n  ), _createElementVNode(\"td\", null, _toDisplayString(_ctx.EmployeeRoll.name), 1\n  /* TEXT */\n  ), _createElementVNode(\"td\", null, _toDisplayString(_ctx.EmployeeRoll.numOfTimes), 1\n  /* TEXT */\n  )])) : _createCommentVNode(\"v-if\", true)])])])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[0] || (_cache[0] = _withModifiers((...args) => _ctx.rollEmployee && _ctx.rollEmployee(...args), [\"prevent\"])),\n    class: \"\"\n  }, _hoisted_16, 32\n  /* HYDRATE_EVENTS */\n  )])])])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","href","_hoisted_5","id","type","_hoisted_15","_createElementBlock","_ctx","_hoisted_7","_hoisted_9","_Fragment","_renderList","emp","_toDisplayString","name","numOfTimes","_hoisted_11","_hoisted_12","onSubmit"],"sourceRoot":"","sources":["C:\\Users\\stajan\\source\\repos\\Staffan_VueTest2\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div v-if=\"Employeeloading \" class=\"Employeeloading \">\r\n                Loading... Please refresh once the ASP.NET backend has started. See <a href=\"https://aka.ms/jspsintegrationvue\">https://aka.ms/jspsintegrationvue</a> for more details.\r\n            </div>\r\n\r\n            <div v-if=\"EmployeeGet\" class=\"col\" id=\"employeesGet\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Id</th>\r\n                            <th>Name</th>\r\n                            <th>Number of times</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr v-for=\"emp in EmployeeGet\">\r\n                            <td>{{ emp.id }}</td>\r\n                            <td>{{ emp.name }}</td>\r\n                            <td>{{ emp.numOfTimes }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div v-if=\"EmployeeRoll\" class=\"col\" id=\"employeesPost\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Id</th>\r\n                            <th>Name</th>\r\n                            <th>Number of times</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr v-if=\"EmployeeRoll\">\r\n                            <td>{{ EmployeeRoll.id }}</td>\r\n                            <td>{{ EmployeeRoll.name }}</td>\r\n                            <td>{{ EmployeeRoll.numOfTimes }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div id=\"employeeRoll\" class=\"col\">\r\n                <div>\r\n                    <form @submit.prevent=\"rollEmployee\" class=\"\">\r\n                        <button type=\"submit\" class=\"btn btn-outline-info\">Who gets to be the \"lucky\" one?</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script lang=\"js\">\r\n    import { defineComponent } from 'vue';\r\n\r\n    export default defineComponent({\r\n        data() {\r\n            return {\r\n                EmployeeGet: null,\r\n                EmployeePost: null,\r\n                EmployeeRoll: null,\r\n                employees: [],\r\n                Employee: {\r\n                    Name: \"\"\r\n                }\r\n            };\r\n        },\r\n        created() {\r\n            // fetch the data when the view is created and the data is\r\n            // already being observed\r\n            this.fetchEmployee();\r\n        },\r\n        watch: {\r\n            // call again the method if the route changes\r\n            '$route': 'fetchEmployee'\r\n        },\r\n        methods: {\r\n            fetchEmployee(){\r\n                this.EmployeeGet = null;\r\n                this.Employeeloading = true;\r\n\r\n                fetch('Employee')\r\n                    .then(r => r.json())\r\n                    .then(json => {\r\n                        this.EmployeeGet = json;\r\n                        this.Employeeloading = false;\r\n                        return;\r\n                    });\r\n            },\r\n            postEmployee() {\r\n                this.EmployeePost = null;\r\n                this.EmployeePostLoading = true;\r\n\r\n                fetch('Employee', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-type': 'application/json'\r\n                    },\r\n                        body: JSON.stringify({ name: this.Employee.Name })\r\n                    })\r\n                    .then(r => r.json())\r\n                    .then(json => {\r\n                        this.EmployeePost = json;\r\n                        this.EmployeePostLoading = false;\r\n                        return;\r\n                    })\r\n                    .catch(err => {\r\n                        err\r\n                    });\r\n            },\r\n            rollEmployee() {\r\n                this.EmployeeRoll = null;\r\n                //this.EmployeePostLoading = true;\r\n\r\n                fetch('Employee/Roll', {\r\n                })\r\n                .then(r => r.json())\r\n                .then(json => {\r\n                    this.EmployeeRoll = json;\r\n                    this.fetchEmployee();\r\n                    //this.EmployeePostLoading = false;\r\n                    return;\r\n                })\r\n                .catch(err => {\r\n                    err\r\n                });\r\n            }\r\n        },\r\n    });\r\n\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}