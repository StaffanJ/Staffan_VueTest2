{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers } from \"vue\";\nimport _imports_0 from '../icon/person-square.svg';\nimport _imports_1 from '../icon/exclamation-circle.svg';\nimport _imports_2 from '../icon/exclamation-circle-fill.svg';\nimport _imports_3 from '../icon/person-workspace.svg';\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"col\",\n  id: \"employeesGet\"\n};\nconst _hoisted_4 = {\n  class: \"table table-hover table-striped table-bordered caption-top\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"caption\", null, \"List of employees\", -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"table-dark\"\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\"), /*#__PURE__*/_createCommentVNode(\"<th>Id</th>\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Number of times\"), /*#__PURE__*/_createElementVNode(\"th\")])], -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"td\", null, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0\n})], -1\n/* HOISTED */\n);\n\nconst _hoisted_8 = {\n  key: 0,\n  id: \"employeeStatusHover\"\n};\nconst _hoisted_9 = [\"onUpdate:modelValue\"];\n\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_1\n})], -1\n/* HOISTED */\n);\n\nconst _hoisted_11 = {\n  key: 1,\n  id: \"employeeStatusHover\"\n};\nconst _hoisted_12 = [\"onUpdate:modelValue\"];\n\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_2\n})], -1\n/* HOISTED */\n);\n\nconst _hoisted_14 = {\n  key: 1,\n  class: \"col\",\n  id: \"employeesPost\"\n};\nconst _hoisted_15 = {\n  class: \"table table-bordered caption-top\"\n};\n\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"caption\", null, \"Employee for the next task\", -1\n/* HOISTED */\n);\n\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"table-dark\"\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\"), /*#__PURE__*/_createCommentVNode(\"<th>Id</th>\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Number of times\")])], -1\n/* HOISTED */\n);\n\nconst _hoisted_18 = {\n  key: 0\n};\n\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"td\", null, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_3\n})], -1\n/* HOISTED */\n);\n\nconst _hoisted_20 = {\n  class: \"row\"\n};\nconst _hoisted_21 = {\n  id: \"employeeRoll\",\n  class: \"col\"\n};\n\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-outline-info btn-sm\"\n}, \"Who gets to be the \\\"lucky\\\" one?\", -1\n/* HOISTED */\n);\n\nconst _hoisted_23 = [_hoisted_22];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_ctx.EmployeeGet ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"table\", _hoisted_4, [_hoisted_5, _hoisted_6, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.EmployeeGet, emp => {\n    return _openBlock(), _createElementBlock(\"tr\", null, [_hoisted_7, _createCommentVNode(\"<td>{{ emp.id }}</td>\"), _createElementVNode(\"td\", null, _toDisplayString(emp.name), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, _toDisplayString(emp.numOfTimes), 1\n    /* TEXT */\n    ), emp.isAvailable === 0 ? (_openBlock(), _createElementBlock(\"td\", _hoisted_8, [_createElementVNode(\"form\", {\n      onSubmit: _cache[0] || (_cache[0] = _withModifiers((...args) => _ctx.changeStatusEmployee && _ctx.changeStatusEmployee(...args), [\"prevent\"]))\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"hidden\",\n      id: \"Id\",\n      \"onUpdate:modelValue\": $event => emp.id = $event\n    }, null, 8\n    /* PROPS */\n    , _hoisted_9), [[_vModelText, emp.id]]), _hoisted_10], 32\n    /* HYDRATE_EVENTS */\n    )])) : _createCommentVNode(\"v-if\", true), emp.isAvailable === 1 ? (_openBlock(), _createElementBlock(\"td\", _hoisted_11, [_createElementVNode(\"form\", {\n      onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => _ctx.changeStatusEmployee && _ctx.changeStatusEmployee(...args), [\"prevent\"]))\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"hidden\",\n      id: \"Id\",\n      \"onUpdate:modelValue\": $event => emp.id = $event\n    }, null, 8\n    /* PROPS */\n    , _hoisted_12), [[_vModelText, emp.id]]), _hoisted_13], 32\n    /* HYDRATE_EVENTS */\n    )])) : _createCommentVNode(\"v-if\", true)]);\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  ))])])])) : _createCommentVNode(\"v-if\", true), _ctx.EmployeeRoll ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [_createElementVNode(\"table\", _hoisted_15, [_hoisted_16, _hoisted_17, _createElementVNode(\"tbody\", null, [_ctx.EmployeeRoll ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_18, [_hoisted_19, _createCommentVNode(\"<td>{{ EmployeeRoll.id }}</td>\"), _createElementVNode(\"td\", null, _toDisplayString(_ctx.EmployeeRoll.name), 1\n  /* TEXT */\n  ), _createElementVNode(\"td\", null, _toDisplayString(_ctx.EmployeeRoll.numOfTimes), 1\n  /* TEXT */\n  )])) : _createCommentVNode(\"v-if\", true)])])])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"div\", null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => _ctx.rollEmployee && _ctx.rollEmployee(...args), [\"prevent\"]))\n  }, _hoisted_23, 32\n  /* HYDRATE_EVENTS */\n  )])])])]);\n}","map":{"version":3,"mappings":"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","names":["_imports_0","_imports_1","_imports_2","_imports_3","class","id","_createElementVNode","_createCommentVNode","src","type","_hoisted_22","_createElementBlock","_ctx","_hoisted_5","_hoisted_6","_Fragment","_renderList","emp","_hoisted_7","_toDisplayString","name","numOfTimes","isAvailable","onSubmit","$event","_hoisted_10","_hoisted_13","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19"],"sourceRoot":"","sources":["C:\\Users\\stajan\\source\\repos\\Staffan_VueTest2\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            \r\n\r\n            <div v-if=\"EmployeeGet\" class=\"col\" id=\"employeesGet\">\r\n                <table class=\"table table-hover table-striped table-bordered caption-top\">\r\n                    <caption>List of employees</caption>\r\n                    <thead class=\"table-dark\">\r\n                        <tr>\r\n                            <th></th>\r\n                            <!--<th>Id</th>-->\r\n                            <th>Name</th>\r\n                            <th>Number of times</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr v-for=\"emp in EmployeeGet\">\r\n                            <td><img src=\"../icon/person-square.svg\"></td>\r\n                            <!--<td>{{ emp.id }}</td>-->\r\n                            <td>{{ emp.name }}</td>\r\n                            <td>{{ emp.numOfTimes }}</td>\r\n                            <td v-if=\"emp.isAvailable === 0\" id=\"employeeStatusHover\">\r\n                                <form @submit.prevent=\"changeStatusEmployee\">\r\n                                    <input type=\"hidden\" id=\"Id\" v-model=\"emp.id\"/>\r\n                                    <button class=\"btn\"><img src=\"../icon/exclamation-circle.svg\"></button>\r\n                                </form>\r\n                            </td>\r\n                            <td v-if=\"emp.isAvailable === 1\" id=\"employeeStatusHover\">\r\n                                <form @submit.prevent=\"changeStatusEmployee\">\r\n                                    <input type=\"hidden\" id=\"Id\" v-model=\"emp.id\" />\r\n                                    <button class=\"btn\"><img src=\"../icon/exclamation-circle-fill.svg\"></button>\r\n                                </form>\r\n                            </td>\r\n                            \r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div v-if=\"EmployeeRoll\" class=\"col\" id=\"employeesPost\">\r\n                <table class=\"table table-bordered caption-top\">\r\n                    <caption>Employee for the next task</caption>\r\n                    <thead class=\"table-dark\">\r\n                        <tr>\r\n                            <th></th>\r\n                            <!--<th>Id</th>-->\r\n                            <th>Name</th>\r\n                            <th>Number of times</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr v-if=\"EmployeeRoll\">\r\n                            <td><img src=\"../icon/person-workspace.svg\" /></td>\r\n                            <!--<td>{{ EmployeeRoll.id }}</td>-->\r\n                            <td>{{ EmployeeRoll.name }}</td>\r\n                            <td>{{ EmployeeRoll.numOfTimes }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div id=\"employeeRoll\" class=\"col\">\r\n                <div>\r\n                    <form @submit.prevent=\"rollEmployee\">\r\n                        <button type=\"submit\" class=\"btn btn-outline-info btn-sm\">Who gets to be the \"lucky\" one?</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script lang=\"js\">\r\n    import { defineComponent } from 'vue';\r\n\r\n    export default defineComponent({\r\n        data() {\r\n            return {\r\n                EmployeeGet: null,\r\n                EmployeePost: null,\r\n                EmployeeRoll: null,\r\n                employees: [],\r\n                Employee: {\r\n                    Name: null,\r\n                    Id: null\r\n                }\r\n            };\r\n        },\r\n        created() {\r\n            // fetch the data when the view is created and the data is\r\n            // already being observed\r\n            this.fetchEmployee();\r\n        },\r\n        watch: {\r\n            // call again the method if the route changes\r\n            '$route': 'fetchEmployee'\r\n        },\r\n        methods: {\r\n            fetchEmployee(){\r\n                this.EmployeeGet = null;\r\n                this.Employeeloading = true;\r\n\r\n                fetch('Employee')\r\n                    .then(r => r.json())\r\n                    .then(json => {\r\n                        this.EmployeeGet = json;\r\n                        this.Employeeloading = false;\r\n                        return;\r\n                    });\r\n            },\r\n            changeStatusEmployee() {\r\n                this.EmployeePost = null;\r\n                //this.EmployeePostLoading = true;\r\n\r\n                fetch('Employee/ChangeStatus/', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-type': 'application/json'\r\n                    },\r\n                        body: JSON.stringify({ data: this.Employee })\r\n                    })\r\n                    .then(r => r.json())\r\n                    .then(json => {\r\n                        this.EmployeePost = json;\r\n                        //this.EmployeePostLoading = false;\r\n                        return;\r\n                    })\r\n                    .catch(err => {\r\n                        err\r\n                    });\r\n            },\r\n            rollEmployee() {\r\n                this.EmployeeRoll = null;\r\n                //this.EmployeePostLoading = true;\r\n\r\n                fetch('Employee/Roll', {\r\n                })\r\n                .then(r => r.json())\r\n                .then(json => {\r\n                    this.EmployeeRoll = json;\r\n                    this.fetchEmployee();\r\n                    //this.EmployeePostLoading = false;\r\n                    return;\r\n                })\r\n                .catch(err => {\r\n                    err\r\n                });\r\n            }\r\n        },\r\n    });\r\n\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}