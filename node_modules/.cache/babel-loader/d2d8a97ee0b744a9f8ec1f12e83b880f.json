{"ast":null,"code":"import { defineComponent } from 'vue';\nexport default defineComponent({\n  data() {\n    return {\n      EmployeeGet: null,\n      EmployeePost: null,\n      EmployeeRoll: null,\n      employee: [],\n      Employee: {\n        Name: \"\"\n      }\n    };\n  },\n\n  created() {\n    // fetch the data when the view is created and the data is\n    // already being observed\n    this.fetchEmployee();\n  },\n\n  watch: {\n    // call again the method if the route changes\n    '$route': 'fetchEmployee'\n  },\n  methods: {\n    fetchEmployee() {\n      this.EmployeeGet = null;\n      this.Employeeloading = true;\n      fetch('Employee').then(r => r.json()).then(json => {\n        this.EmployeeGet = json;\n        this.Employeeloading = false;\n        return;\n      });\n    },\n\n    changeStatusEmployee() {\n      this.EmployeePost = null;\n      this.EmployeePostLoading = true;\n      fetch('Employee/ChangeStatus', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: this.Employee.Name\n        })\n      }).then(r => r.json()).then(json => {\n        this.EmployeePost = json;\n        this.EmployeePostLoading = false;\n        return;\n      }).catch(err => {\n        err;\n      });\n    },\n\n    rollEmployee() {\n      this.EmployeeRoll = null; //this.EmployeePostLoading = true;\n\n      fetch('Employee/Roll', {}).then(r => r.json()).then(json => {\n        this.EmployeeRoll = json;\n        this.fetchEmployee(); //this.EmployeePostLoading = false;\n\n        return;\n      }).catch(err => {\n        err;\n      });\n    }\n\n  }\n});","map":{"version":3,"mappings":"AA8EI,SAASA,eAAT,QAAgC,KAAhC;AAEA,eAAeA,eAAe,CAAC;AAC3BC,MAAI,GAAG;AACH,WAAO;AACHC,iBAAW,EAAE,IADV;AAEHC,kBAAY,EAAE,IAFX;AAGHC,kBAAY,EAAE,IAHX;AAIHC,cAAQ,EAAE,EAJP;AAKHC,cAAQ,EAAE;AACNC,YAAI,EAAE;AADA;AALP,KAAP;AASH,GAX0B;;AAY3BC,SAAO,GAAG;AACN;AACA;AACA,SAAKC,aAAL;AACH,GAhB0B;;AAiB3BC,OAAK,EAAE;AACH;AACA,cAAU;AAFP,GAjBoB;AAqB3BC,SAAO,EAAE;AACLF,iBAAa,GAAE;AACX,WAAKP,WAAL,GAAmB,IAAnB;AACA,WAAKU,eAAL,GAAuB,IAAvB;AAEAC,WAAK,CAAC,UAAD,CAAL,CACKC,IADL,CACUC,KAAKA,CAAC,CAACC,IAAF,EADf,EAEKF,IAFL,CAEUE,IAAG,IAAK;AACV,aAAKd,WAAL,GAAmBc,IAAnB;AACA,aAAKJ,eAAL,GAAuB,KAAvB;AACA;AACH,OANL;AAOH,KAZI;;AAaLK,wBAAoB,GAAG;AACnB,WAAKd,YAAL,GAAoB,IAApB;AACA,WAAKe,mBAAL,GAA2B,IAA3B;AAEAL,WAAK,CAAC,uBAAD,EAA0B;AAC3BM,cAAM,EAAE,MADmB;AAE3BC,eAAO,EAAE;AACL,0BAAgB;AADX,SAFkB;AAKvBC,YAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,cAAI,EAAE,KAAKlB,QAAL,CAAcC;AAAtB,SAAf;AALiB,OAA1B,CAAL,CAOKO,IAPL,CAOUC,KAAKA,CAAC,CAACC,IAAF,EAPf,EAQKF,IARL,CAQUE,IAAG,IAAK;AACV,aAAKb,YAAL,GAAoBa,IAApB;AACA,aAAKE,mBAAL,GAA2B,KAA3B;AACA;AACH,OAZL,EAaKO,KAbL,CAaWC,GAAE,IAAK;AACVA,WAAE;AACL,OAfL;AAgBH,KAjCI;;AAkCLC,gBAAY,GAAG;AACX,WAAKvB,YAAL,GAAoB,IAApB,CADW,CAEX;;AAEAS,WAAK,CAAC,eAAD,EAAkB,EAAlB,CAAL,CAECC,IAFD,CAEMC,KAAKA,CAAC,CAACC,IAAF,EAFX,EAGCF,IAHD,CAGME,IAAG,IAAK;AACV,aAAKZ,YAAL,GAAoBY,IAApB;AACA,aAAKP,aAAL,GAFU,CAGV;;AACA;AACH,OARD,EASCgB,KATD,CASOC,GAAE,IAAK;AACVA,WAAE;AACL,OAXD;AAYJ;;AAlDK;AArBkB,CAAD,CAA9B","names":["defineComponent","data","EmployeeGet","EmployeePost","EmployeeRoll","employee","Employee","Name","created","fetchEmployee","watch","methods","Employeeloading","fetch","then","r","json","changeStatusEmployee","EmployeePostLoading","method","headers","body","JSON","stringify","name","catch","err","rollEmployee"],"sourceRoot":"","sources":["C:\\Users\\stajan\\source\\repos\\Staffan_VueTest2\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            \r\n\r\n            <div v-if=\"EmployeeGet\" class=\"col\" id=\"employeesGet\">\r\n                <table class=\"table table-hover table-striped table-bordered caption-top\">\r\n                    <caption>List of employees</caption>\r\n                    <thead class=\"table-dark\">\r\n                        <tr>\r\n                            <th></th>\r\n                            <!--<th>Id</th>-->\r\n                            <th>Name</th>\r\n                            <th>Number of times</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr v-for=\"emp in EmployeeGet\">\r\n                            <td><img src=\"../icon/person-square.svg\"></td>\r\n                            <!--<td>{{ emp.id }}</td>-->\r\n                            <td>{{ emp.name }}</td>\r\n                            <td>{{ emp.numOfTimes }}</td>\r\n                            <td v-if=\"emp.isAvailable === 0\" id=\"employeeStatusHover\">\r\n                                <form @submit.prevent=\"changeStatusEmployee\">\r\n                                    <input type=\"text\" v-model=\"empid\" value=\"{{emp.id}}\" />\r\n                                    <button class=\"btn\"><img src=\"../icon/exclamation-circle.svg\"></button>\r\n                                </form>\r\n                            </td>\r\n                            <td v-if=\"emp.isAvailable === 1\" id=\"employeeStatusHover\">\r\n                                <form @submit.prevent=\"changeStatusEmployee\">\r\n                                    <input type=\"text\" v-model=\"empid\" value=\"{{emp.id}}\" />\r\n                                    <button class=\"btn\"><img src=\"../icon/exclamation-circle-fill.svg\"></button>\r\n                                </form>\r\n                            </td>\r\n                            \r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div v-if=\"EmployeeRoll\" class=\"col\" id=\"employeesPost\">\r\n                <table class=\"table table-bordered caption-top\">\r\n                    <caption>Employee for the next task</caption>\r\n                    <thead class=\"table-dark\">\r\n                        <tr>\r\n                            <th></th>\r\n                            <!--<th>Id</th>-->\r\n                            <th>Name</th>\r\n                            <th>Number of times</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr v-if=\"EmployeeRoll\">\r\n                            <td><img src=\"../icon/person-workspace.svg\" /></td>\r\n                            <!--<td>{{ EmployeeRoll.id }}</td>-->\r\n                            <td>{{ EmployeeRoll.name }}</td>\r\n                            <td>{{ EmployeeRoll.numOfTimes }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div id=\"employeeRoll\" class=\"col\">\r\n                <div>\r\n                    <form @submit.prevent=\"rollEmployee\">\r\n                        <button type=\"submit\" class=\"btn btn-outline-info btn-sm\">Who gets to be the \"lucky\" one?</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script lang=\"js\">\r\n    import { defineComponent } from 'vue';\r\n\r\n    export default defineComponent({\r\n        data() {\r\n            return {\r\n                EmployeeGet: null,\r\n                EmployeePost: null,\r\n                EmployeeRoll: null,\r\n                employee: [],\r\n                Employee: {\r\n                    Name: \"\"\r\n                }\r\n            };\r\n        },\r\n        created() {\r\n            // fetch the data when the view is created and the data is\r\n            // already being observed\r\n            this.fetchEmployee();\r\n        },\r\n        watch: {\r\n            // call again the method if the route changes\r\n            '$route': 'fetchEmployee'\r\n        },\r\n        methods: {\r\n            fetchEmployee(){\r\n                this.EmployeeGet = null;\r\n                this.Employeeloading = true;\r\n\r\n                fetch('Employee')\r\n                    .then(r => r.json())\r\n                    .then(json => {\r\n                        this.EmployeeGet = json;\r\n                        this.Employeeloading = false;\r\n                        return;\r\n                    });\r\n            },\r\n            changeStatusEmployee() {\r\n                this.EmployeePost = null;\r\n                this.EmployeePostLoading = true;\r\n\r\n                fetch('Employee/ChangeStatus', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-type': 'application/json'\r\n                    },\r\n                        body: JSON.stringify({ name: this.Employee.Name })\r\n                    })\r\n                    .then(r => r.json())\r\n                    .then(json => {\r\n                        this.EmployeePost = json;\r\n                        this.EmployeePostLoading = false;\r\n                        return;\r\n                    })\r\n                    .catch(err => {\r\n                        err\r\n                    });\r\n            },\r\n            rollEmployee() {\r\n                this.EmployeeRoll = null;\r\n                //this.EmployeePostLoading = true;\r\n\r\n                fetch('Employee/Roll', {\r\n                })\r\n                .then(r => r.json())\r\n                .then(json => {\r\n                    this.EmployeeRoll = json;\r\n                    this.fetchEmployee();\r\n                    //this.EmployeePostLoading = false;\r\n                    return;\r\n                })\r\n                .catch(err => {\r\n                    err\r\n                });\r\n            }\r\n        },\r\n    });\r\n\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}