{"ast":null,"code":"import { defineComponent } from 'vue';\nexport default defineComponent({\n  data() {\n    return {\n      EmployeeGet: null,\n      EmployeePost: null,\n      EmployeeRoll: null,\n      //employee: [],\n      emp: {\n        name: \"\",\n        empid: \"\"\n      }\n    };\n  },\n\n  async created() {\n    // fetch the data when the view is created and the data is\n    // already being observed\n    this.fetchEmployee();\n  },\n\n  watch: {\n    // call again the method if the route changes\n    '$route': 'fetchEmployee'\n  },\n  methods: {\n    fetchEmployee() {\n      this.EmployeeGet = null;\n      this.Employeeloading = true;\n      fetch('Employee').then(r => r.json()).then(json => {\n        this.EmployeeGet = json;\n        this.Employeeloading = false;\n        return;\n      });\n    },\n\n    changeStatusEmployee(employee) {\n      console.log(employee);\n      this.EmployeePost = null; //this.EmployeePostLoading = true;\n\n      fetch('Employee/ChangeStatus/', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        //body: JSON.stringify({ data: employee })\n        body: employee\n      }).then(r => r.json()).then(json => {\n        this.EmployeePost = json; //this.EmployeePostLoading = false;\n\n        return;\n      }).catch(err => {\n        err;\n      });\n    },\n\n    rollEmployee() {\n      this.EmployeeRoll = null; //this.EmployeePostLoading = true;\n\n      fetch('Employee/Roll', {}).then(r => r.json()).then(json => {\n        this.EmployeeRoll = json;\n        this.fetchEmployee(); //this.EmployeePostLoading = false;\n\n        return;\n      }).catch(err => {\n        err;\n      });\n    }\n\n  }\n});","map":{"version":3,"mappings":"AAwEI,SAASA,eAAT,QAAgC,KAAhC;AAEA,eAAeA,eAAe,CAAC;AAC3BC,MAAI,GAAG;AACH,WAAO;AACHC,iBAAW,EAAE,IADV;AAEHC,kBAAY,EAAE,IAFX;AAGHC,kBAAY,EAAE,IAHX;AAIH;AACAC,SAAG,EAAE;AACDC,YAAI,EAAE,EADL;AAEDC,aAAK,EAAE;AAFN;AALF,KAAP;AAUH,GAZ0B;;AAa3B,QAAMC,OAAN,GAAgB;AACZ;AACA;AACA,SAAKC,aAAL;AACH,GAjB0B;;AAkB3BC,OAAK,EAAE;AACH;AACA,cAAU;AAFP,GAlBoB;AAsB3BC,SAAO,EAAE;AACLF,iBAAa,GAAE;AACX,WAAKP,WAAL,GAAmB,IAAnB;AACA,WAAKU,eAAL,GAAuB,IAAvB;AAEAC,WAAK,CAAC,UAAD,CAAL,CACKC,IADL,CACUC,KAAKA,CAAC,CAACC,IAAF,EADf,EAEKF,IAFL,CAEUE,IAAG,IAAK;AACV,aAAKd,WAAL,GAAmBc,IAAnB;AACA,aAAKJ,eAAL,GAAuB,KAAvB;AACA;AACH,OANL;AAOH,KAZI;;AAaLK,wBAAoB,CAACC,QAAD,EAAW;AAC3BC,aAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAKf,YAAL,GAAoB,IAApB,CAF2B,CAG3B;;AAEAU,WAAK,CAAC,wBAAD,EAA2B;AAC5BQ,cAAM,EAAE,MADoB;AAE5BC,eAAO,EAAE;AACL,0BAAgB;AADX,SAFmB;AAKxB;AACAC,YAAI,EAAEL;AANkB,OAA3B,CAAL,CAQKJ,IARL,CAQUC,KAAKA,CAAC,CAACC,IAAF,EARf,EASKF,IATL,CASUE,IAAG,IAAK;AACV,aAAKb,YAAL,GAAoBa,IAApB,CADU,CAEV;;AACA;AACH,OAbL,EAcKQ,KAdL,CAcWC,GAAE,IAAK;AACVA,WAAE;AACL,OAhBL;AAiBH,KAnCI;;AAoCLC,gBAAY,GAAG;AACX,WAAKtB,YAAL,GAAoB,IAApB,CADW,CAEX;;AAEAS,WAAK,CAAC,eAAD,EAAkB,EAAlB,CAAL,CAECC,IAFD,CAEMC,KAAKA,CAAC,CAACC,IAAF,EAFX,EAGCF,IAHD,CAGME,IAAG,IAAK;AACV,aAAKZ,YAAL,GAAoBY,IAApB;AACA,aAAKP,aAAL,GAFU,CAGV;;AACA;AACH,OARD,EASCe,KATD,CASOC,GAAE,IAAK;AACVA,WAAE;AACL,OAXD;AAYJ;;AApDK;AAtBkB,CAAD,CAA9B","names":["defineComponent","data","EmployeeGet","EmployeePost","EmployeeRoll","emp","name","empid","created","fetchEmployee","watch","methods","Employeeloading","fetch","then","r","json","changeStatusEmployee","employee","console","log","method","headers","body","catch","err","rollEmployee"],"sourceRoot":"","sources":["C:\\Users\\stajan\\source\\repos\\Staffan_VueTest2\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            \r\n\r\n            <div v-if=\"EmployeeGet\" class=\"col\" id=\"employeesGet\">\r\n                <table class=\"table table-hover table-striped table-bordered caption-top\">\r\n                    <caption>List of employees</caption>\r\n                    <thead class=\"table-dark\">\r\n                        <tr>\r\n                            <th></th>\r\n                            <!--<th>Id</th>-->\r\n                            <th>Name</th>\r\n                            <th>Number of times</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr v-for=\"emp in EmployeeGet\" :key=\"emp.id\">\r\n                            <td><img src=\"../icon/person-square.svg\"></td>\r\n                            <!--<td>{{ emp.id }}</td>-->\r\n                            <td>{{ emp.name }}</td>\r\n                            <td>{{ emp.numOfTimes }}</td>\r\n                            <td v-if=\"emp.isAvailable === 0\" id=\"employeeStatusHover\">\r\n                                <button type=\"submit\" class=\"btn\" @click.prevent=\"changeStatusEmployee(emp.id)\"><img src=\"../icon/exclamation-circle.svg\"></button>\r\n                            </td>\r\n                            <td v-if=\"emp.isAvailable === 1\" id=\"employeeStatusHover\">\r\n                                <button type=\"submit\" class=\"btn\" @click.prevent=\"changeStatusEmployee(emp.id)\"><img src=\"../icon/exclamation-circle-fill.svg\"></button>\r\n                            </td>\r\n                            \r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div v-if=\"EmployeeRoll\" class=\"col\" id=\"employeesPost\">\r\n                <table class=\"table table-bordered caption-top\">\r\n                    <caption>Employee for the next task</caption>\r\n                    <thead class=\"table-dark\">\r\n                        <tr>\r\n                            <th></th>\r\n                            <!--<th>Id</th>-->\r\n                            <th>Name</th>\r\n                            <th>Number of times</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr v-if=\"EmployeeRoll\">\r\n                            <td><img src=\"../icon/person-workspace.svg\" /></td>\r\n                            <!--<td>{{ EmployeeRoll.id }}</td>-->\r\n                            <td>{{ EmployeeRoll.name }}</td>\r\n                            <td>{{ EmployeeRoll.numOfTimes }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div id=\"employeeRoll\" class=\"col\">\r\n                <div>\r\n                    <form @submit.prevent=\"rollEmployee\">\r\n                        <button type=\"submit\" class=\"btn btn-outline-info btn-sm\">Who gets to be the \"lucky\" one?</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script lang=\"js\">\r\n    import { defineComponent } from 'vue';\r\n\r\n    export default defineComponent({\r\n        data() {\r\n            return {\r\n                EmployeeGet: null,\r\n                EmployeePost: null,\r\n                EmployeeRoll: null,\r\n                //employee: [],\r\n                emp: {\r\n                    name: \"\",\r\n                    empid: \"\"\r\n                }\r\n            };\r\n        },\r\n        async created() {\r\n            // fetch the data when the view is created and the data is\r\n            // already being observed\r\n            this.fetchEmployee();\r\n        },\r\n        watch: {\r\n            // call again the method if the route changes\r\n            '$route': 'fetchEmployee'\r\n        },\r\n        methods: {\r\n            fetchEmployee(){\r\n                this.EmployeeGet = null;\r\n                this.Employeeloading = true;\r\n\r\n                fetch('Employee')\r\n                    .then(r => r.json())\r\n                    .then(json => {\r\n                        this.EmployeeGet = json;\r\n                        this.Employeeloading = false;\r\n                        return;\r\n                    });\r\n            },\r\n            changeStatusEmployee(employee) {\r\n                console.log(employee);\r\n                this.EmployeePost = null;\r\n                //this.EmployeePostLoading = true;\r\n\r\n                fetch('Employee/ChangeStatus/', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-type': 'application/json'\r\n                    },\r\n                        //body: JSON.stringify({ data: employee })\r\n                        body: employee\r\n                    })\r\n                    .then(r => r.json())\r\n                    .then(json => {\r\n                        this.EmployeePost = json;\r\n                        //this.EmployeePostLoading = false;\r\n                        return;\r\n                    })\r\n                    .catch(err => {\r\n                        err\r\n                    });\r\n            },\r\n            rollEmployee() {\r\n                this.EmployeeRoll = null;\r\n                //this.EmployeePostLoading = true;\r\n\r\n                fetch('Employee/Roll', {\r\n                })\r\n                .then(r => r.json())\r\n                .then(json => {\r\n                    this.EmployeeRoll = json;\r\n                    this.fetchEmployee();\r\n                    //this.EmployeePostLoading = false;\r\n                    return;\r\n                })\r\n                .catch(err => {\r\n                    err\r\n                });\r\n            }\r\n        },\r\n    });\r\n\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}